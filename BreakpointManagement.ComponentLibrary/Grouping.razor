@using Radzen
@using Radzen.Blazor

<h3>Breakpoint Grouping</h3>

@if (standardList == null || standardList.Count <= 0)
{
    <h3>Loading . . . .</h3>
}
else
{
    <RadzenTree Change=@OnChange Data=@standardList Expand=@OnLoad Style="width: 100%; height: 300px">
        <RadzenTreeLevel TextProperty="BpStandard" />
    </RadzenTree>

    <RadzenButton Click=@(args => OnForwardClick("Forard button with icon")) Icon="fast_forward" Style="margin-bottom: 20px; width: 80px" />
    <RadzenButton Click=@(args => OnReverseClick("Reverse button with icon")) Icon="fast_rewind" Style="margin-bottom: 20px; width: 80px" />

    @if (!string.IsNullOrWhiteSpace(currentBreakpointGroup?.BpgroupName))
    {
        <h3>Selected Breakpoint Group: @currentBreakpointGroup.BpgroupName</h3>
    }

    @ProjectPickerCmp

    @if (!string.IsNullOrWhiteSpace(currentBreakpointGroup?.BpgroupName) &&
         !string.IsNullOrWhiteSpace(Props?.Project?.ProjectName))
    {
        <!-- Show selected items -->

        <h3>@_selectedExcludedOrganisms.Count selected</h3>
        <h3>@_selectedOrganisms.Count selected</h3>
    }
}